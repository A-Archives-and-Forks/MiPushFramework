apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        buildConfigField "boolean", "DEBUG_CONDOM", "true"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    lintOptions {
        // Disable 'NewApi' checking due to false errors in old version of lint tool, until sdk-tool-25.4 is deployed on Travis-CI.
        disable 'NewApi'
        textOutput 'stdout'
        textReport true
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    namespace 'com.oasisfeng.condom'
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.1'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    testImplementation 'junit:junit:4.12'
}

android.libraryVariants.all { variant ->
    String taskName = String.format("remove%sStubClasses", variant.name.capitalize())
    task "${taskName}" {
        doLast { delete "${buildDir}/intermediates/classes/${variant.name}" + "/android" }
    }
    variant.getProcessJavaResourcesProvider().get().dependsOn(taskName)
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.implementation

    exclude "com/oasisfeng/condom/util/**.java"
    exclude "android/**.java"
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

if (file('deploy.gradle').exists()) apply from: 'deploy.gradle'
